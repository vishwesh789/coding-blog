{"pageProps":{"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In recent years, serverless architecture has gained significant popularity due to its scalability, cost-efficiency, and reduced operational overhead. AWS (Amazon Web Services) provides a powerful suite of services that allows developers to build serverless applications easily. In this article, we will explore how to build a serverless application using Node.js and AWS.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Prerequisites\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Before diving into building a serverless application, you should have some basic knowledge of Node.js and AWS services such as AWS Lambda, API Gateway, and S3.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Overview of a Serverless Application\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A serverless application is an application where the infrastructure management is abstracted away, and developers can focus solely on writing code. AWS Lambda is a key component of building serverless applications, as it allows you to run your code without provisioning or managing servers.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The serverless application we'll be building is a simple image recognition service. Users will be able to upload an image to the application, and it will return a response with the labels that describe the contents of the image.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 1: Set Up AWS Account and Tools\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To get started, you'll need an AWS account. If you don't have one, you can create a free account on the AWS website. Once you have an account, make sure you have the AWS CLI (Command Line Interface) installed on your machine. The AWS CLI allows you to interact with various AWS services from the command line.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After installing the AWS CLI, configure it with your AWS credentials by running the following command:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-plaintext\",\n      children: _jsx(_components.code, {\n        className: \"language-plaintext\",\n        children: _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"$ aws configure\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You'll need to provide your AWS Access Key ID, Secret Access Key, default region, and output format.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 2: Create an S3 Bucket\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In our application, we need a place to store the uploaded images. AWS provides Simple Storage Service (S3), which is an object storage service. Let's create an S3 bucket to store our images.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Open the AWS Management Console.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Navigate to the S3 service.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Click on the \\\"Create bucket\\\" button.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide a unique name for your bucket and choose the region.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Leave the default settings for the rest of the options and click \\\"Create bucket.\\\"\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 3: Create a Lambda Function\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next, we'll create a Lambda function that will handle the image recognition logic. Follow these steps:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Open the AWS Management Console.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Navigate to the Lambda service.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Click on the \\\"Create function\\\" button.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Choose the \\\"Author from scratch\\\" option.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide a name for your function and select Node.js 14.x as the runtime.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Under \\\"Permissions,\\\" choose an existing role or create a new one with the necessary permissions to access S3.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Click \\\"Create function.\\\"\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 4: Write the Lambda Function\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now that we have our Lambda function, let's write the code to handle the image recognition.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In the Lambda function's code editor, replace the default code with the following Node.js code:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-javascript\",\n      children: _jsxs(_components.code, {\n        className: \"language-javascript\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"AWS\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"require\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'aws-sdk'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"v4\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" uuidv4 \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"require\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'uuid'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" rekognition \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"new\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token class-name\",\n            children: [\"AWS\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), \"Rekognition\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" s3 \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"new\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token class-name\",\n            children: [\"AWS\", _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \".\"\n            }), \"S3\"]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"exports\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method-variable function-variable method function property-access\",\n            children: \"handler\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"async\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token parameter\",\n            children: \"event\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" bucketName \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'your-s3-bucket-name'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" imageName \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsxs(_components.span, {\n            className: \"token template-string\",\n            children: [_jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"${\"\n              }), _jsx(_components.span, {\n                className: \"token function\",\n                children: \"uuidv4\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"(\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \")\"\n              }), _jsx(_components.span, {\n                className: \"token interpolation-punctuation punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \".jpg\"\n            }), _jsx(_components.span, {\n              className: \"token template-punctuation string\",\n              children: \"`\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token maybe-class-name\",\n            children: \"Buffer\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token keyword module\",\n            children: \"from\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"event\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: \"body\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'base64'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// Assuming the image data is passed in the request body as base64 encoded string\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" s3Params \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"Bucket\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" bucketName\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"Key\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" imageName\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"Body\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" s3\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"putObject\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"s3Params\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"promise\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" rekognitionParams \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"Image\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"S3Object\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"Bucket\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" bucketName\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"        \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"Name\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" imageName\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"MaxLabels\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"MinConfidence\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"70\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" response \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"await\"\n          }), \" rekognition\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"detectLabels\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"rekognitionParams\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"promise\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"const\"\n          }), \" labels \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" response\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"Labels\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"map\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token parameter\",\n            children: \"label\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token arrow operator\",\n            children: \"=>\"\n          }), \" label\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token property-access\",\n            children: _jsx(_components.span, {\n              className: \"token maybe-class-name\",\n              children: \"Name\"\n            })\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword control-flow\",\n            children: \"return\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"statusCode\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"200\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token literal-property property\",\n            children: \"body\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token known-class-name class-name\",\n            children: \"JSON\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token method function property-access\",\n            children: \"stringify\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" labels \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's go through the code step by step:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"We import the necessary AWS SDK modules and the \", _jsx(_components.strong, {\n          children: \"uuidv4\"\n        }), \" function from the \", _jsx(_components.strong, {\n          children: \"uuid\"\n        }), \" package.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"We create instances of the AWS Rekognition service and the S3 service.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Our Lambda function is an async function named \", _jsx(_components.strong, {\n          children: \"handler\"\n        }), \" that takes an \", _jsx(_components.strong, {\n          children: \"event\"\n        }), \" parameter.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We define the \", _jsx(_components.strong, {\n          children: \"bucketName\"\n        }), \" variable, which should be set to the name of the S3 bucket you created earlier.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We generate a unique image name using the \", _jsx(_components.strong, {\n          children: \"uuidv4\"\n        }), \" function and the \", _jsx(_components.strong, {\n          children: \".jpg\"\n        }), \" file extension.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"We convert the image data from base64 to a Buffer object.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We define the \", _jsx(_components.strong, {\n          children: \"s3Params\"\n        }), \" object, which specifies the bucket name, image name, and image data for uploading to S3 using the \", _jsx(_components.strong, {\n          children: \"putObject\"\n        }), \" method.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We use \", _jsx(_components.strong, {\n          children: \"await\"\n        }), \" to ensure the image is uploaded to S3 before continuing.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We define the \", _jsx(_components.strong, {\n          children: \"rekognitionParams\"\n        }), \" object, which specifies the image to analyze, the maximum number of labels to return (\", _jsx(_components.strong, {\n          children: \"MaxLabels\"\n        }), \"), and the minimum confidence level for the labels (\", _jsx(_components.strong, {\n          children: \"MinConfidence\"\n        }), \").\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We use the \", _jsx(_components.strong, {\n          children: \"detectLabels\"\n        }), \" method of the Rekognition service to perform the image recognition and store the result in the \", _jsx(_components.strong, {\n          children: \"response\"\n        }), \" variable.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"We extract the label names from the \", _jsx(_components.strong, {\n          children: \"response\"\n        }), \" object and store them in the \", _jsx(_components.strong, {\n          children: \"labels\"\n        }), \" array.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Finally, we return a response with a status code of 200 and the labels as a JSON string in the response body.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 5: Configure API Gateway\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To expose our Lambda function as a RESTful API, we'll use API Gateway, which is a fully managed service by AWS. Here's how you can configure API Gateway:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Open the AWS Management Console.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Navigate to the API Gateway service.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Click on the \\\"Create API\\\" button.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Choose the \\\"REST\\\" protocol and click on the \\\"Build\\\" button.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Under \\\"Create new API,\\\" select \\\"New API.\\\"\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide a name for your API and select the appropriate region.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Click on the \\\"Create API\\\" button.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 6: Create an API Resource and Method\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Once you've created the API, follow these steps to create a resource and method:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Click on the \\\"Actions\\\" dropdown and select \\\"Create Resource.\\\"\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Provide a name for your resource (e.g., \\\"image\\\").\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Select the newly created resource and click on the \\\"Create Resource\\\" button.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"With the newly created resource selected, click on the \\\"Actions\\\" dropdown again and select \\\"Create Method.\\\"\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Choose the HTTP method you want to use (e.g., POST) and click on the checkmark button.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"In the \\\"Integration Type\\\" section, select \\\"Lambda Function\\\" and choose the Lambda function you created earlier.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Click on the \\\"Save\\\" button.\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 7: Deploy the API\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To make your API accessible, you need to deploy it. Here's how:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"With your API selected in the API Gateway console, click on the \\\"Actions\\\" dropdown and select \\\"Deploy API.\\\"\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"In the \\\"Deployment stage\\\" section, choose \\\"New Stage.\\\"\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Provide a name for your stage (e.g., \\\"dev\\\") and click on the \\\"Deploy\\\" button.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After successful deployment, you will see the \\\"Invoke URL\\\" for your API. Take note of this URL as we will use it to test our serverless application.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Step 8: Test the Serverless Application\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To test your serverless application, you can use tools like cURL or Postman. Follow these steps to test the image recognition service:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Send a POST request to the Invoke URL of your API's endpoint.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Set the request body to contain the image data as a base64 encoded string.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Make sure to set the \\\"Content-Type\\\" header to \\\"application/json\\\".\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's an example cURL command to test the service:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-plaintext\",\n      children: _jsx(_components.code, {\n        className: \"language-plaintext\",\n        children: _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"$ curl -X POST -H \\\"Content-Type: application/json\\\" -d '{\\\"body\\\": \\\"base64-encoded-image-data\\\"}' https://your-api-gateway-url/dev/image\\n\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Replace \\\"base64-encoded-image-data\\\" with the actual base64 encoded image data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If everything is set up correctly, you should receive a response with the detected labels in the JSON format.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Conclusion\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Congratulations! You have successfully built a serverless application using Node.js and AWS. We covered the essential steps, from setting up the AWS account and tools to deploying the serverless application using Lambda, API Gateway, and S3. Remember, serverless architecture offers scalability, reduced operational overhead, and cost-efficiency, making it an excellent choice for many applications. Keep exploring the AWS services and possibilities to unleash the full potential of serverless development. Happy coding!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"title":"Building a Serverless Application with Node.js and AWS","metaDesc":"In recent years, serverless architecture has gained significant popularity due to its scalability, cost-efficiency, and reduced operational overhead. AWS (Amazon Web Services) provides a powerful suite of services that allows developers to build serverless applications easily. In this article, we will explore how to build a serverless application using Node.js and AWS.","tags":["node js"],"slug":"building-a-serverless-application-with-node-js-and-aws","readTime":6,"img":"https://images.pexels.com/photos/11035380/pexels-photo-11035380.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","author":{"data":{"id":1,"attributes":{"username":"vishwesh","email":"vishwesh.singh1991@gmail.com","provider":"local","confirmed":false,"blocked":false,"createdAt":"2023-04-30T11:12:14.071Z","updatedAt":"2023-04-30T11:12:14.071Z"}}}},"__N_SSG":true}