{"pageProps":{"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Machine learning models are widely used today to solve complex problems in various industries. However, these models are often considered as \\\"black boxes\\\" due to their complexity, making it difficult for humans to understand how they are making predictions. This lack of transparency and interpretability can lead to a lack of trust in the models, which can be a major barrier to their adoption in certain applications.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One approach to addressing this issue is to use SHAP (SHapley Additive exPlanations) values, which are a popular method for explaining the predictions made by machine learning models. In this article, we will discuss what SHAP values are, how they work, and how they can be used to interpret machine learning models.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"What are SHAP values?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"SHAP values were introduced by Scott Lundberg and Su-In Lee in their 2017 paper, \\\"A Unified Approach to Interpreting Model Predictions\\\". SHAP values provide a way to assign a \\\"contribution score\\\" to each feature in a dataset, indicating how much that feature contributes to the final prediction made by a machine learning model.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The basic idea behind SHAP values is to use game theory to assign a fair share of the prediction to each feature in the dataset. Specifically, SHAP values are based on the Shapley value, which is a concept from cooperative game theory that is used to allocate the payoff from a game among the players based on their contribution to the game.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In the context of machine learning, the \\\"game\\\" is the prediction task, and the \\\"players\\\" are the features in the dataset. The SHAP values for a given prediction indicate how much each feature \\\"contributed\\\" to that prediction, relative to all the other features.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"How do SHAP values work?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To understand how SHAP values work, let's consider a simple example. Suppose we have a dataset with two features, \\\"age\\\" and \\\"income\\\", and a binary classification task of predicting whether a person is likely to default on a loan. We train a machine learning model on this dataset and want to understand how the model is making predictions.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"One way to use SHAP values to interpret this model is to calculate the SHAP value for each feature for a given prediction. For example, suppose the model predicts that a person with an age of 30 and an income of $50,000 is likely to default on a loan. We can calculate the SHAP value for the \\\"age\\\" feature as follows:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Start with the baseline prediction, which is the average prediction for the entire dataset.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Compute the difference between the prediction with the \\\"age\\\" feature set to 30 and the baseline prediction.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Repeat this process for all possible combinations of features, and compute the average difference for each feature.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The resulting SHAP value for the \\\"age\\\" feature would indicate how much that feature contributed to the final prediction, relative to the other features.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"How can SHAP values be used to interpret machine learning models?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"SHAP values can be used to interpret machine learning models in a variety of ways. Here are a few examples:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Feature importance: SHAP values can be used to rank the features in a dataset by their importance for a given prediction. This can help identify which features are driving the model's predictions and which are less important.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Individual prediction explanations: SHAP values can be used to provide an explanation for a specific prediction made by a model. By calculating the SHAP values for each feature in the prediction, we can identify which features had the biggest impact on the prediction and why.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Model debugging: SHAP values can be used to identify potential issues with a machine learning model, such as bias or overfitting. By examining the SHAP values for different predictions and comparing them, we can identify patterns that may indicate problems with the model.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"SHAP values can also be visualized using various techniques, such as bar charts, heatmaps, and summary plots. These visualizations can help make the SHAP values more interpretable and provide a more intuitive understanding of how the model is making predictions.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Conclusion\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In summary, SHAP values are a powerful tool for interpreting machine learning models and making them more transparent and explainable. By assigning a contribution score to each feature in a dataset, SHAP values provide a way to understand how a model is making predictions and identify potential issues or biases.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"While SHAP values can be a bit complex to understand at first, they are an important technique to have in your toolkit as a machine learning practitioner. By using SHAP values to interpret your models, you can build more trust in your predictions, identify issues with your models, and make better decisions based on the insights gained from your models.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"title":"Model Explainability with SHAP Values: How to Interpret Your Machine Learning Models","metaDesc":"The basic idea behind SHAP values is to use game theory to assign a fair share of the prediction to each feature in the dataset. Specifically, SHAP values are based on the Shapley value, which is a concept from cooperative game theory that is used to allocate the payoff from a game among the players based on their contribution to the game.\n\nIn the context of machine learning, the \"game\" is the prediction task, and the \"players\" are the features in the dataset. The SHAP values for a given prediction indicate how much each feature \"contributed\" to that prediction, relative to all the other features.","tags":["Model Explainability with SHAP Values"],"slug":"model-explainability-with-shap-values-how-to-interpret-your-machine-learning-models","readTime":5,"img":"https://images.pexels.com/photos/943096/pexels-photo-943096.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","author":{"data":{"id":1,"attributes":{"username":"vishwesh","email":"vishwesh.singh1991@gmail.com","provider":"local","confirmed":false,"blocked":false,"createdAt":"2023-04-30T11:12:14.071Z","updatedAt":"2023-04-30T11:12:14.071Z"}}}},"__N_SSG":true}