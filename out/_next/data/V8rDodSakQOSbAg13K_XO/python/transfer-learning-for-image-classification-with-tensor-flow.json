{"pageProps":{"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Image classification is an important task in computer vision, which involves assigning a label to an image based on its content. Deep learning models have achieved state-of-the-art performance on this task, but training them from scratch requires a large amount of labeled data and computing resources. Transfer learning is a technique that leverages pre-trained models to solve new tasks with smaller data sets and less computation.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this article, we will introduce transfer learning for image classification with TensorFlow, a popular deep learning framework. We will cover the following topics:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"What is transfer learning and why is it useful?\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"How to use pre-trained models in TensorFlow\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Fine-tuning a pre-trained model for a new task\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Evaluating and testing the transfer learning model\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"What is Transfer Learning and Why is it Useful?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Transfer learning is a technique in deep learning that uses pre-trained models as a starting point for a new task. The pre-trained model has already learned a lot of knowledge from a large dataset and can be used to extract features from new data. The features can then be used as input to a new model that is trained on a smaller dataset for a new task. Transfer learning is useful because it can save time and computing resources by using the pre-trained model as a starting point, and it can also improve the performance of the new model by leveraging the knowledge learned from the pre-trained model.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"How to Use Pre-trained Models in TensorFlow\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"TensorFlow provides a library of pre-trained models called TensorFlow Hub. These models are trained on large datasets such as ImageNet and are available for download and use in your own projects. To use a pre-trained model in TensorFlow, you can use the \", _jsx(_components.strong, {\n        children: \"hub.KerasLayer\"\n      }), \" class, which wraps the pre-trained model as a Keras layer.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is an example of using a pre-trained model for image classification:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" tensorflow_hub \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" hub\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" tensorflow \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" tf\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Load a pre-trained model from TensorFlow Hub\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model_url \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/feature_vector/5\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"feature_extractor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" hub\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"KerasLayer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"model_url\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" input_shape\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Build a new model for image classification\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Sequential\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    feature_extractor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"layers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Dense\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1000\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" activation\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"softmax\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Compile the model\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"compile\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"optimizer\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"adam\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" loss\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"categorical_crossentropy\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" metrics\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"accuracy\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example, we load the MobileNetV2 model from TensorFlow Hub and use it as a feature extractor. We then build a new model for image classification by adding a dense layer with a softmax activation function. Finally, we compile the model with the Adam optimizer and categorical cross-entropy loss function.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Fine-tuning a Pre-trained Model for a New Task\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In some cases, the pre-trained model may not be directly applicable to the new task. For example, the pre-trained model may have been trained on a different set of classes than the new task. In these cases, we can fine-tune the pre-trained model by retraining some or all of the layers on the new data set.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is an example of fine-tuning a pre-trained model for a new task:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" tensorflow_datasets \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" tfds\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Load the new data set\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"dataset_name \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"cats_vs_dogs\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" info \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tfds\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"load\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"dataset_name\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" with_info\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Split the data set into train and test sets\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"train_dataset \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"train\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"map\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"lambda\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"image\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"label\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"test_dataset \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"test\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"map\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"lambda\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"image\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" x\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"label\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Preprocess the data set\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"preprocess\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" label\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"resize\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"cast\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"float32\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    label \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"one_hot\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"label\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), \" image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" label\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"train_dataset \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" train_dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"map\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"preprocess\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"shuffle\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1000\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"batch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"32\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"test_dataset \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" test_dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"map\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"preprocess\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"batch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"32\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Load a pre-trained model from TensorFlow Hub\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model_url \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/feature_vector/5\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"feature_extractor \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" hub\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"KerasLayer\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"model_url\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" input_shape\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"3\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Build a new model for fine-tuning\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Sequential\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    feature_extractor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"layers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Dense\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"2\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" activation\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"softmax\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Freeze the feature extractor layers\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"feature_extractor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"trainable \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"False\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Compile the model\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"compile\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"optimizer\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"adam\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" loss\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"categorical_crossentropy\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" metrics\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"accuracy\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Fine-tune the model on the new data set\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"history \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"fit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"train_dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" epochs\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"5\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" validation_data\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"test_dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Unfreeze the feature extractor layers\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"feature_extractor\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"trainable \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token boolean\",\n            children: \"True\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Compile the model again\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"compile\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"optimizer\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"optimizers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"Adam\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1e-5\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" loss\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"categorical_crossentropy\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" metrics\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"accuracy\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Fine-tune the model again\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"history \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"fit\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"train_dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" epochs\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"10\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" validation_data\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \"test_dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this example, we load the cats vs. dogs dataset from TensorFlow Datasets and split it into train and test sets. We then preprocess the data set by resizing the images to 224x224, scaling the pixel values to the range [0, 1], and one-hot encoding the labels. We use the MobileNetV2 model from TensorFlow Hub as a feature extractor and add a dense layer with a softmax activation function for binary classification. We freeze the feature extractor layers and compile the model with the Adam optimizer and categorical cross-entropy loss function. We fine-tune the model on the new data set for 5 epochs and then unfreeze the feature extractor layers. We compile the model again with a lower learning rate and fine-tune it for another 10 epochs.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Evaluating and Testing the Transfer Learning Model\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"After training the transfer learning model, we can evaluate its performance on the test set and use it for inference on new data.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is an example of evaluating and testing the transfer learning model:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-python\",\n      children: _jsxs(_components.code, {\n        className: \"language-python\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" matplotlib\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"pyplot \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" plt\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" numpy \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"as\"\n          }), \" np\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Evaluate the model on the test set\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"test_loss\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" test_accuracy \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"evaluate\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"test_dataset\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"print\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token string-interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token string\",\n              children: \"f\\\"Test loss: \"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"test_loss\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \", Test accuracy: \"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"test_accuracy\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Make predictions on new data\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"image_url \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"https://www.catster.com/wp-content/uploads/2018/05/A-gray-cat-closing-its-eyes-and-enjoying-the-sunshine.-Photography-by-StocksyUnited.jpg\\\"\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"utils\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"get_file\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"image.jpg\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" image_url\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"preprocessing\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"load_img\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" target_size\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"224\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" tf\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"keras\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"preprocessing\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"img_to_array\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"/\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"255.0\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"image \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"expand_dims\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" axis\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"prediction \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" model\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"predict\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"class_names \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"cat\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"dog\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"predicted_class \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" class_names\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"argmax\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"prediction\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"confidence \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" np\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token builtin\",\n            children: \"max\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"prediction\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"plt\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"imshow\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"image\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"plt\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"axis\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"off\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"plt\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"title\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsxs(_components.span, {\n            className: \"token string-interpolation\",\n            children: [_jsx(_components.span, {\n              className: \"token string\",\n              children: \"f\\\"Prediction: \"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"predicted_class\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \", Confidence: \"\n            }), _jsxs(_components.span, {\n              className: \"token interpolation\",\n              children: [_jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"{\"\n              }), \"confidence\", _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \":\"\n              }), _jsx(_components.span, {\n                className: \"token format-spec\",\n                children: \".2f\"\n              }), _jsx(_components.span, {\n                className: \"token punctuation\",\n                children: \"}\"\n              })]\n            }), _jsx(_components.span, {\n              className: \"token string\",\n              children: \"\\\"\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"plt\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"show\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this example, we evaluate the model on the test set and print the test loss and accuracy. We then download an image of a cat from the internet and preprocess it in the same way as the training and test data. We use the \", _jsx(_components.strong, {\n        children: \"predict\"\n      }), \" method of the model to make a prediction on the new data and convert the prediction to a class name and confidence score. We then plot the image and the predicted class and confidence score.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Conclusion\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Transfer learning is a powerful technique for image classification that allows us to leverage pre-trained models to solve new tasks with limited data. In this article, we have explored the basics of transfer learning for image classification with TensorFlow, including how to load pre-trained models from TensorFlow Hub, how to fine-tune them for new tasks, and how to evaluate and test the transfer learning model. By following these steps, even beginners can build accurate image classifiers with limited data.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"title":"Transfer Learning for Image Classification with TensorFlow","metaDesc":"In this article, we will introduce transfer learning for image classification with TensorFlow, a popular deep learning framework. We will cover the following topics:\n\nWhat is transfer learning and why is it useful?\nHow to use pre-trained models in TensorFlow\nFine-tuning a pre-trained model for a new task\nEvaluating and testing the transfer learning model\n","tags":["Transfer Learning for Image Classification with TensorFlow"],"slug":"transfer-learning-for-image-classification-with-tensor-flow","readTime":5,"img":"https://images.pexels.com/photos/574069/pexels-photo-574069.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","author":{"data":{"id":1,"attributes":{"username":"vishwesh","email":"vishwesh.singh1991@gmail.com","provider":"local","confirmed":false,"blocked":false,"createdAt":"2023-04-30T11:12:14.071Z","updatedAt":"2023-04-30T11:12:14.071Z"}}}},"__N_SSG":true}